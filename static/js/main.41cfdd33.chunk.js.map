{"version":3,"sources":["Bar.tsx","Colors.ts","DataHelper.ts","SortingAlgorithms.ts","Header.tsx","ColorScheme.tsx","SideContent.tsx","index.tsx"],"names":["Bar","angle","position","highlightColor","this","color","speed","styles","outerContainer","display","height","width","left","borderRadius","marginRight","transformOrigin","background","transform","transition","transitionDuration","key","style","getInitialAngle","barsCount","index","Math","floor","getInitialPosition","spacing","mark","data","setData","toMark","customeTime","hasOwnProperty","highlight","markAll","bounds","bound","i","select","index1","index2","Colors","unselect","swap","a","tempPosition","temp","reset","newLength","length","newData","push","bubbleSort","setIsPlaying","playing","j","current","minimum","previous","mergeSortHelper","right","mid","merge","start","min","quickSortHelper","low","high","partition","pivot","leftwall","buildHeap","heapify","n","max","speeds","boxShadow","borderTopLeftRadius","borderTopRightRadius","title","runButton","sliderContainer","sliderTitle","top","userSelect","slider","algorithmsButton","fontSize","algorithmsMenu","Header","props","numberBars","generateNewData","selectedAlgorithm","setSelectedAlgorithm","sleepTime","setSleepTime","React","useState","anchorEl","setAnchorEl","isPlaying","useRef","random","sort","b","algorithm","SortingAlgorithms","AppBar","Toolbar","Typography","variant","Button","onClick","disabled","opacity","gutterBottom","Slider","value","onChange","event","newValue","valueLabelDisplay","aria-labelledby","indexOf","step","List","component","aria-label","currentTarget","Menu","keepMounted","open","Boolean","onClose","map","option","MenuItem","selected","handleMenuItemClick","bottom","innerContainer","marginTop","text","makeColor","backgroundColor","ColorScheme","picked","minWidth","borderBottomLeftRadius","flexDirection","padding","about","flex","marginBottom","complexity","algorithmsContainer","algorithmns","margin","pseudoCodeOuterContainer","overflow","pseudoCodeTitle","pseudoCodeInnerContainer","maxHeight","fontFamily","line","lineNumber","lineCode","marginLeft","aboutAlgorithm","name","pseudoCode","code","codeComponent","repeat","split","getNumberTabs","SideContent","topSection","bottomSection","algorithms","algo","getWelcomeContent","App","setNumberBars","time","appContainer","flexFlow","flexWrap","contentContainer","linkShoutout","newNumberBars","Promise","resolve","setTimeout","useEffect","bars","bar","getComponent","getDataComponent","Link","href","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.41cfdd33.chunk.js","sourcesContent":["import React from 'react';\n\ntype Styles = {\n  outerContainer: object,\n};\n\nclass Bar {\n    position: number;\n    angle: number;\n    highlightColor: string;\n\n    constructor(angle: number, position: number) {\n      this.angle = angle;\n      this.position = position;\n      this.highlightColor = 'black';\n    }\n\n    highlight(color: string) {\n      this.highlightColor = color;\n    }\n\n    getComponent(speed: number) {\n      const styles: Styles = {\n        outerContainer: {\n          position: 'absolute',\n          display: 'inline-block',\n          height: '100%',\n          width: '3px',\n          left: this.position,\n          borderRadius: '3px',\n          marginRight: '10px',\n          transformOrigin: 'bottom left',\n          background: this.highlightColor,\n          transform: `rotate(${this.angle}deg)`,\n          transition: 'cubic-bezier(1, 0.01, 0.1, 1)',\n          transitionDuration: `${speed}ms`,\n        },\n      };\n\n      return (<div key={this.angle} style={styles.outerContainer}></div>);\n    }\n};\n\nexport default Bar;\n","export default {\n  primary: '#333',\n  secondary: '#999',\n  black: 'black',\n  green: '#0db641',\n  lightBlue: '#4a5fff',\n  blue: '#0718ff',\n  red: 'red',\n  grey: '#46474f',\n  lightGrey: '#e0e0e0',\n  lighterGrey: '#efeff1',\n  evenLighterGrey: '#f4f4f6',\n  almostWhiteGrey: '#bfc0c7',\n};\n","// eslint-disable-next-line no-unused-vars\nimport Bar from './Bar';\nimport Colors from './Colors';\nimport {spacing} from './index';\n\nexport function getInitialAngle(barsCount: number, index: number): number {\n  return (- Math.floor(barsCount / 2) + index);\n}\n\nexport function getInitialPosition(index: number): number {\n  return index * spacing;\n}\nexport function mark(data: Bar[], setData:(data: Bar[], customeTime?: number) => void, toMark: object, customeTime?: number) {\n  for (const index in toMark) {\n    if (toMark.hasOwnProperty(index)) {\n      const bar = data[index];\n      bar.highlight(toMark[index]);\n    }\n  }\n  if (customeTime) {\n    return setData(data, customeTime);\n  }\n  return setData(data);\n}\n\nexport function markAll(data: Bar[], setData:(data: Bar[], customeTime?: number) => void, bounds: number[][], color: string, customeTime?: number) {\n  for (const bound of bounds) {\n    for (let i: number = bound[0]; i < bound[1]; i++) {\n      data[i].highlight(color);\n    }\n  }\n  if (customeTime) {\n    return setData(data, customeTime);\n  }\n  return setData(data);\n}\n\nexport function select(data: Bar[], setData:(data: Bar[]) => void, index1: number, index2: number) {\n  if (data[index1].angle < data[index2].angle) {\n    data[index1].highlight(Colors.green);\n    data[index2].highlight(Colors.green);\n  } else {\n    data[index1].highlight(Colors.red);\n    data[index2].highlight(Colors.red);\n  }\n  return setData(data);\n}\n\nexport function unselect(data: Bar[], setData:(data: Bar[], customeTime?: number) => void, index1: number, index2: number, customeTime?: number) {\n  data[index1].highlight(Colors.black);\n  data[index2].highlight(Colors.black);\n  if (customeTime) {\n    return setData(data, customeTime);\n  }\n  return setData(data);\n}\n\nexport async function swap(data: Bar[], setData:(data: Bar[]) => void, index1: number, index2: number) {\n  const tempPosition = data[index1].position;\n  data[index1].position = data[index2].position;\n  data[index2].position = tempPosition;\n  await setData(data);\n  const temp = data[index1];\n  data[index1] = data[index2];\n  data[index2] = temp;\n  return setData(data);\n}\n\nexport async function reset(data: Bar[], setData:(data: Bar[]) => void, newLength: number = data.length) {\n  const newData: Bar[] = [];\n  for (let index: number = 0; index < newLength; index ++) {\n    newData.push(new Bar(getInitialAngle(newLength, index), getInitialPosition(index)));\n  }\n  await setData(newData);\n}\n","// eslint-disable-next-line no-unused-vars\nimport Bar from './Bar';\nimport {mark, swap, select, unselect, markAll, reset} from './DataHelper';\nimport Colors from './Colors';\n\nasync function bubbleSort(data: Bar[], setData: (data: Bar[], customeTime?: number) => void, setIsPlaying: (isPlaying: boolean) => void, playing) {\n  setIsPlaying(true);\n  for (let i = 0; i < data.length - 1; i ++) {\n    for (let j = 0; j < data.length - i - 1; j ++) {\n      if (!playing.current) return await reset(data, setData);\n      await select(data, setData, j, j + 1);\n      if (data[j].angle > data[j + 1].angle) {\n        await swap(data, setData, j, j + 1);\n      }\n      await unselect(data, setData, j, j + 1);\n    }\n  }\n  setIsPlaying(false);\n}\n\nasync function selectionSort(data: Bar[], setData: (data: Bar[]) => void, setIsPlaying: (isPlaying: boolean) => void, playing) {\n  setIsPlaying(true);\n  for (let i: number = 0; i < data.length - 1; i ++) {\n    let minimum: number = i;\n    let previous: number = i;\n    for (let j: number = i; j < data.length; j ++) {\n      if (!playing.current) return await reset(data, setData);\n      if (data[j].angle < data[minimum].angle) {\n        await mark(data, setData, {[j as number]: Colors.green, [minimum as number]: Colors.black});\n        minimum = j;\n      } else {\n        if (j === i) {\n          await mark(data, setData, {[j as number]: Colors.lightBlue});\n        } else {\n          await mark(data, setData, {[j as number]: Colors.lightBlue, [previous as number]: 'black'});\n        }\n        previous = j;\n      }\n    }\n    await swap(data, setData, i, minimum);\n    await mark(data, setData, {[i as number]: Colors.black, [minimum as number]: Colors.black, [previous as number]: Colors.black});\n  }\n  setIsPlaying(false);\n}\n\nasync function insertionSort(data: Bar[], setData: (data: Bar[]) => void, setIsPlaying: (isPlaying: boolean) => void, playing) {\n  setIsPlaying(true);\n  for (let i: number = 1; i < data.length; i ++) {\n    let j = i - 1;\n    await mark(data, setData, {[i as number]: Colors.lightBlue}, 0);\n    while (j >= 0 && data[j].angle > data[j+1].angle) {\n      if (!playing.current) return await reset(data, setData);\n      await mark(data, setData, {[j as number]: Colors.red});\n      if (data[j].angle > data[j+1].angle) {\n        await swap(data, setData, j, j+1);\n      }\n      if (j >= 1 && data[j-1].angle > data[j].angle) {\n        await mark(data, setData, {[j as number]: Colors.lightBlue, [j+1 as number]: Colors.black}, 0);\n      }\n      j--;\n    }\n    await mark(data, setData, {[j+1 as number]: Colors.green, [j+2 as number]: Colors.green});\n    await mark(data, setData, {[j+1 as number]: Colors.black, [j+2 as number]: Colors.black}, 0);\n  }\n  setIsPlaying(false);\n}\n\nasync function mergeSort(data: Bar[], setData: (data: Bar[]) => void, setIsPlaying: (isPlaying: boolean) => void, playing) {\n  setIsPlaying(true);\n  await mergeSortHelper(data, setData, 0, data.length - 1, playing);\n  if (!playing.current) return await reset(data, setData);\n  setIsPlaying(false);\n}\n\nasync function mergeSortHelper(data: Bar[], setData: (data: Bar[]) => void, left: number, right: number, playing) {\n  // left and right are inclusif\n  await markAll(data, setData, [[0, left -1], [right+1, data.length]], Colors.lightGrey, 0);\n  if (!playing.current) return;\n  if (left === right) {\n    await mark(data, setData, {[left as number]: Colors.green});\n    await mark(data, setData, {[left as number]: Colors.lightGrey});\n    return;\n  }\n  const mid = Math.floor((left + right) / 2);\n  await mergeSortHelper(data, setData, left, mid, playing);\n  if (!playing.current) return;\n  await mergeSortHelper(data, setData, mid + 1, right, playing);\n  if (!playing.current) return;\n  await merge(data, setData, left, mid, right, playing);\n}\n\nasync function merge(data: Bar[], setData: (data: Bar[]) => void, left: number, mid: number, right: number, playing) {\n  await markAll(data, setData, [[left, right]], Colors.black, 0);\n  const start = left;\n  while (left < right) {\n    let min = left;\n    for (let i: number = left; i <= right; i++) {\n      if (!playing.current) return;\n      if (data[i].angle < data[min].angle) {\n        min = i;\n      }\n    }\n    if (min === left) {\n    } else {\n      await select(data, setData, left, min);\n      if (data[left].angle > data[min].angle) {\n        await swap(data, setData, left, min);\n      }\n      await unselect(data, setData, left, min, 0);\n    }\n\n    left ++;\n  }\n  await markAll(data, setData, [[start, right+1]], Colors.green);\n  await markAll(data, setData, [[start, right+1]], Colors.black, 0);\n}\n\nasync function quickSort(data: Bar[], setData: (data: Bar[]) => void, setIsPlaying: (isPlaying: boolean) => void, playing) {\n  setIsPlaying(true);\n  await quickSortHelper(data, setData, 0, data.length - 1, playing);\n  if (!playing.current) return await reset(data, setData);\n  await markAll(data, setData, [[0, data.length]], Colors.black, 0);\n  setIsPlaying(false);\n}\n\nasync function quickSortHelper(data: Bar[], setData: (data: Bar[]) => void, low: number, high: number, playing) {\n  await markAll(data, setData, [[0, low -1], [high+1, data.length]], Colors.lightGrey, 0);\n  if (low < high) {\n    if (!playing.current) return;\n    const pivot = await partition(data, setData, low, high, playing);\n    await quickSortHelper(data, setData, low, pivot as number-1, playing);\n    await quickSortHelper(data, setData, pivot as number, high, playing);\n  }\n}\n\nasync function partition(data: Bar[], setData: (data: Bar[]) => void, low: number, high: number, playing) {\n  await markAll(data, setData, [[low, high]], Colors.black, 0);\n  let leftwall = low - 1;\n  const pivot = data[high].angle;\n  await mark(data, setData, {[high as number]: Colors.lightBlue});\n  for (let i: number = low; i <= high; i++) {\n    if (!playing.current) return;\n    if (data[i].angle < pivot) {\n      leftwall++;\n      await mark(data, setData, {[i as number]: Colors.red});\n      await swap(data, setData, i, leftwall);\n      await unselect(data, setData, i, leftwall, 0);\n    } else {\n      await mark(data, setData, {[i as number]: Colors.green});\n      await mark(data, setData, {[i as number]: Colors.black}, 0);\n    }\n  }\n  await swap(data, setData, high, leftwall + 1);\n  return leftwall + 1;\n}\n\nasync function heapSort(data: Bar[], setData: (data: Bar[]) => void, setIsPlaying: (isPlaying: boolean) => void, playing) {\n  setIsPlaying(true);\n  await buildHeap(data, setData, playing);\n  if (!playing.current) return await reset(data, setData);\n  for (let i: number = data.length - 1; i > 0; i --) {\n    if (!playing.current) return await reset(data, setData);\n    await swap(data, setData, 0, i);\n    await heapify(data, setData, i, 0, playing);\n  }\n  setIsPlaying(false);\n}\n\nasync function buildHeap(data: Bar[], setData: (data: Bar[]) => void, playing) {\n  for (let i: number = Math.floor(data.length / 2); i >= 0; i --) {\n    await heapify(data, setData, data.length, i, playing);\n    if (!playing.current) return;\n  }\n}\n\nasync function heapify(data: Bar[], setData: (data: Bar[]) => void, n: number, i: number, playing) {\n  if (!playing.current) return;\n  const left = 2 * i + 1;\n  const right = 2 * i + 2;\n  let max = i;\n  if (left < n && data[i].angle < data[left].angle) {\n    max = left;\n  }\n  if (right < n && data[max].angle < data[right].angle) {\n    max = right;\n  }\n  if (max != i) {\n    await mark(data, setData, {[i as number]: Colors.red, [max as number]: Colors.red});\n    await swap(data, setData, i, max);\n    await unselect(data, setData, i, max, 0);\n    await heapify(data, setData, n, max, playing);\n  }\n}\nexport default [\n  ['Sorting Algorithms', bubbleSort],\n  ['Bubble Sort', bubbleSort],\n  ['Selection Sort', selectionSort],\n  ['Insertion Sort', insertionSort],\n  ['Merge Sort', mergeSort],\n  ['Quick Sort', quickSort],\n  ['Heap Sort', heapSort],\n];\n","import React, {useRef} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n// eslint-disable-next-line no-unused-vars\nimport Bar from './Bar';\nimport SortingAlgorithms from './SortingAlgorithms';\nimport Colors from './Colors';\n\ntype Props = {\n  data: Bar[],\n  setData: (data: Bar[], customeTime?: number) => void,\n  numberBars: number,\n  generateNewData: (newValue: number) => void,\n  selectedAlgorithm: number,\n  setSelectedAlgorithm: (selectedAlgorithm: number) => void,\n  sleepTime: number,\n  setSleepTime: (sleepTime: number) => void,\n};\n\ntype Styles = {\n  outerContainer: object,\n  title: object,\n  runButton: object,\n  sliderTitle: object,\n  slider: object,\n  sliderContainer: object,\n  algorithmsButton: object,\n  algorithmsMenu: object,\n}\n\nconst speeds = [3000, 1500, 1000, 800, 500, 300, 200, 100, 30, 1];\n\nconst styles: Styles = {\n  outerContainer: {\n    position: 'relative',\n    display: 'block',\n    width: '100%',\n    background: Colors.primary,\n    color: 'white',\n    boxShadow: 'none',\n    borderTopLeftRadius: '5px',\n    borderTopRightRadius: '5px',\n  },\n  title: {\n    marginRight: '260px',\n  },\n  runButton: {\n    marginRight: '50px',\n  },\n  sliderContainer: {\n    position: 'relative',\n    display: 'block',\n    height: '35px',\n    width: '200px',\n    marginRight: '50px',\n  },\n  sliderTitle: {\n    position: 'absolute',\n    top: '2px',\n    userSelect: 'none',\n  },\n  slider: {\n    position: 'absolute',\n    width: '200px',\n    top: '13px',\n    color: Colors.secondary,\n  },\n  algorithmsButton: {\n    position: 'absolute',\n    top: '5px',\n    right: '20px',\n    color: '',\n    fontSize: '0.875rem',\n  },\n  algorithmsMenu: {\n    top: '4px',\n  },\n};\n\nfunction Header(props: Props) {\n  const {data, setData, numberBars, generateNewData, selectedAlgorithm, setSelectedAlgorithm, sleepTime, setSleepTime} = props;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [isPlaying, setIsPlaying] = React.useState<boolean>(false);\n  const playing = useRef(isPlaying);\n  playing.current = isPlaying;\n  async function shuffle() {\n    let j; let temp; let i;\n    for (i = data.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      temp = data[i].position;\n      data[i].position = data[j].position;\n      data[j].position = temp;\n    }\n    // swap position in the screen (animation)\n    await setData(data);\n\n    // swap position in the data[]\n    data.sort((a, b) => (a.position > b.position) ? 1: -1);\n    await setData(data);\n\n    const algorithm = SortingAlgorithms[selectedAlgorithm][1] as (data: Bar[], setData: (data: Bar[], customeTime?: number) => void, setIsPlaying: (isPlaying: boolean) => void, playing) => void;\n    algorithm(data, setData, setIsPlaying, playing);\n  }\n\n  function onNumberBarsChange(event: any, newValue: number | number[]): void {\n    generateNewData(newValue as number);\n  }\n\n  function onSpeedChange(event: any, newValue: number | number[]): void {\n    setSleepTime(speeds[(newValue as number) - 1]);\n  }\n\n  function getSpeed() {\n    return speeds.indexOf(sleepTime) + 1;\n  }\n\n  const handleClickListItem = (event): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index): void => {\n    setSelectedAlgorithm(index);\n    setAnchorEl(null);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const onPauseClicked = (): void => {\n    setIsPlaying(false);\n  };\n\n  return (\n    <AppBar position=\"static\" style={styles.outerContainer}>\n      <Toolbar>\n        <Typography variant=\"h6\" style={styles.title}>\n            Sort Visualizer\n        </Typography>\n        <Button\n          variant='contained'\n          style={styles.runButton}\n          onClick={shuffle}\n          disabled={isPlaying || selectedAlgorithm == 0}\n        >\n        Shuffle & Run!\n        </Button>\n        <Button\n          variant='contained'\n          style={styles.runButton}\n          onClick={onPauseClicked}\n          disabled={!isPlaying}\n        >\n        Stop\n        </Button>\n        <div style={{...styles.sliderContainer, opacity: isPlaying? '0.2': '1'}}>\n          <Typography style={styles.sliderTitle} variant='button' gutterBottom>\n            Size\n          </Typography>\n          <Slider\n            style={styles.slider}\n            value={numberBars}\n            onChange={onNumberBarsChange}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"continuous-slider\"\n            min={5}\n            disabled={isPlaying}\n          />\n        </div>\n        <div style={styles.sliderContainer}>\n          <Typography style={styles.sliderTitle} variant='button' gutterBottom>\n            Speed\n          </Typography>\n          <Slider\n            style={styles.slider}\n            value={getSpeed()}\n            onChange={onSpeedChange}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"continuous-slider\"\n            min={1}\n            max={10}\n            step={1}\n          />\n        </div>\n        <List\n          style={styles.algorithmsButton}\n          component=\"nav\"\n          aria-label=\"Device settings\"\n        >\n          <Button\n            variant='contained'\n            onClick={handleClickListItem}\n            disabled={isPlaying}\n          >\n            {SortingAlgorithms[selectedAlgorithm][0] as string}\n          </Button>\n        </List>\n        <Menu\n          style={styles.algorithmsMenu}\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {SortingAlgorithms.map((option, index) => (\n            <MenuItem\n              key={option[0] as string}\n              disabled={index === 0}\n              selected={index === selectedAlgorithm}\n              onClick={(event) => handleMenuItemClick(event, index)}\n            >\n              {option[0] as string}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Colors from './Colors';\nimport Typography from '@material-ui/core/Typography';\nimport SortingAlgorithms from './SortingAlgorithms';\n\ntype Props = {\n  selectedAlgorithm: number,\n};\n\ntype Style = {\n    outerContainer: object,\n    innerContainer: object,\n    color: object,\n    text: object,\n};\n\nconst styles: Style = {\n  outerContainer: {\n    display: 'block',\n    position: 'absolute',\n    height: 'fit-content',\n    width: 'fit-content',\n    left: '10px',\n    bottom: '10px',\n  },\n  innerContainer: {\n    position: 'relative',\n    marginTop: '5px',\n  },\n  color: {\n    position: 'relative',\n    display: 'inline-block',\n    height: '4px',\n    width: '20px',\n    borderRadius: '2px',\n    top: '-1px',\n    marginRight: '10px',\n\n  },\n  text: {\n    position: 'relative',\n    display: 'inline-block',\n  },\n};\n\nconst makeColor = (color: string, text: string) => {\n  return (\n    <div style={styles.innerContainer}>\n      <div style={{...styles.color, backgroundColor: color}}/>\n      <Typography style={styles.text} variant='subtitle2'>\n        {text}\n      </Typography>\n    </div>\n  );\n};\n\nexport default function ColorScheme(props: Props) {\n  const {selectedAlgorithm} = props;\n  const picked = SortingAlgorithms[selectedAlgorithm][0];\n  const component: React.element[] = [];\n  if (picked === 'Bubble Sort' || picked === 'Insertion Sort' || picked === 'Merge Sort') {\n    component.push(makeColor(Colors.green, 'sorted'));\n  } else if (picked === 'Selection Sort') {\n    component.push(makeColor(Colors.green, 'minimum'));\n  } else if (picked === 'Quick Sort') {\n    component.push(makeColor(Colors.green, '> pivot'));\n  }\n  if (picked === 'Bubble Sort' || picked === 'Insertion Sort' || picked === 'Merge Sort' || picked === 'Heap Sort') {\n    component.push(makeColor(Colors.red, 'unsorted'));\n  } else if (picked === 'Quick Sort') {\n    component.push(makeColor(Colors.red, '< pivot'));\n  }\n  if (picked === 'Selection Sort') {\n    component.push(makeColor(Colors.lightBlue, 'visiting'));\n  } else if (picked === 'Insertion Sort') {\n    component.push(makeColor(Colors.lightBlue, 'key'));\n  } else if (picked === 'Quick Sort') {\n    component.push(makeColor(Colors.lightBlue, 'pivot'));\n  }\n  return (\n    <div style={styles.outerContainer}>\n      {component}\n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Colors from './Colors';\nimport SortingAlgorithms from './SortingAlgorithms';\n\ntype Props = {\n  selectedAlgorithm: number\n}\ntype Styles = {\n  outerContainer: object,\n  innerContainer: object,\n  about: object,\n  title: object,\n  algorithmns: object,\n  complexity: object,\n  algorithmsContainer: object,\n  pseudoCodeOuterContainer: object,\n  pseudoCodeTitle: object,\n  pseudoCodeInnerContainer: object,\n  line: object,\n  lineNumber: object,\n  lineCode: object,\n};\n\nconst styles: Styles = {\n  outerContainer: {\n    position: 'relative',\n    display: 'inline-grid',\n    minWidth: '400px',\n    height: '100%',\n    backgroundColor: Colors.lightGrey,\n    borderBottomLeftRadius: '5px',\n  },\n  innerContainer: {\n    position: 'absolute',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '20px',\n    height: '-webkit-fill-available',\n    width: '-webkit-fill-available',\n  },\n  about: {\n    position: 'relative',\n    display: 'block',\n    flex: '0 auto',\n  },\n  title: {\n    marginBottom: '15px',\n  },\n  complexity: {\n    display: 'block',\n    marginBottom: '-10px',\n  },\n  algorithmsContainer: {\n    marginTop: '20px',\n    marginBottom: '20px',\n    padding: '5px',\n    borderRadius: '5px',\n    backgroundColor: Colors.lighterGrey,\n  },\n  algorithmns: {\n    padding: '5px',\n    margin: '10px',\n  },\n  pseudoCodeOuterContainer: {\n    display: 'block',\n    position: 'relative',\n    height: 'auto',\n    marginTop: '50px',\n    flex: '0 1 auto',\n    borderRadius: '5px',\n    overflow: 'hidden',\n    color: Colors.grey,\n  },\n  pseudoCodeTitle: {\n    display: 'block',\n    position: 'relative',\n    height: 'fit-content',\n    padding: '10px',\n    backgroundColor: Colors.lighterGrey,\n  },\n  pseudoCodeInnerContainer: {\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'column',\n    height: '100%',\n    maxHeight: '100%',\n    overflow: 'auto',\n    padding: '10px',\n    backgroundColor: Colors.evenLighterGrey,\n    fontFamily: 'Source Code Pro,Inconsolata,Monaco,Consolas,Courier New,Courier,monospace',\n    fontSize: '0.9em',\n  },\n  line: {\n    flex: '0 1 auto',\n    display: 'block',\n    position: 'relative',\n    height: 'fit-content',\n    padding: '5px',\n    backgroundColor: Colors.evenLighterGrey,\n  },\n  lineNumber: {\n    display: 'inline-block',\n    position: 'absolute',\n    height: 'fit-content',\n    color: Colors.almostWhiteGrey,\n    userSelect: 'none',\n  },\n  lineCode: {\n    display: 'inline-block',\n    position: 'relative',\n    height: 'fit-content',\n    marginLeft: '15px',\n  },\n};\n\nfunction aboutAlgorithm(name: string, complexity: string[], about: string) {\n  return (\n    <div style={styles.about}>\n      <Typography style={styles.title} variant='h3'>{name}</Typography>\n      <Typography >{about}</Typography>\n      <Typography style={styles.complexity} variant=\"overline\" gutterBottom>{`Time : O(${complexity[0]})`}</Typography>\n      <Typography style={styles.complexity} variant=\"overline\" gutterBottom>{`Space : O(${complexity[1]})`}</Typography>\n    </div>\n  );\n}\n\nfunction getNumberTabs(code: string): number {\n  return code.split('\\t').length - 1;\n}\n\nfunction pseudoCode(code: string[]) {\n  const codeComponent: React.element[] = code.map((line, index) => {\n    return (\n      <div key={index} style={styles.line}>\n        <div style={styles.lineNumber}>{index}</div>\n        <div style={styles.lineCode}>{'\\u00A0'.repeat(getNumberTabs(line) * 2) + line}</div>\n      </div>);\n  });\n  return (\n    <div style={styles.pseudoCodeOuterContainer}>\n      <div style={styles.pseudoCodeTitle}>\n        <Typography>\n          Pseudocode\n        </Typography>\n      </div>\n      <div style={styles.pseudoCodeInnerContainer}>\n        {codeComponent}\n      </div>\n    </div>\n  );\n}\n\nfunction getWelcomeContent() {\n  const algorithms = SortingAlgorithms.map((algo, index) => {\n    return (<Typography key={index} style={styles.algorithmns}>{algo[0]}</Typography>);\n  });\n  return (\n    <div style={styles.about}>\n      <Typography style={styles.title} variant='h3'>Welcome!</Typography>\n      <Typography >Sort Visualizer is an interactive web app to visualize how a data set is modified by a few popular sorting algorithm. Each data element is represented by an angled bar. Small elements have are angled to the left while larger elements are angled to the right.</Typography>\n      <Typography >Visualize sorting algorithms from the following:</Typography>\n      <div style={styles.algorithmsContainer}>\n        {algorithms}\n      </div>\n    </div>\n  );\n}\n\n\nfunction SideContent(props: Props) {\n  const {selectedAlgorithm} = props;\n  let topSection: React.element = '';\n  let bottomSection: React.element = '';\n  switch (SortingAlgorithms[selectedAlgorithm][0]) {\n    case 'Sorting Algorithms':\n      topSection = getWelcomeContent();\n      break;\n    case 'Bubble Sort':\n      topSection = aboutAlgorithm('Bubble Sort', ['N\\u00B2', '1'], 'Each pair of adjacent elements is compared and the elements are swapped if they are not in order.');\n      bottomSection = pseudoCode(['for i from 1 to N', '\\tfor j from 0 to N-1-i', '\\t\\tif array[j] > array[j+1]', '\\t\\t\\tswap(array[j], array[j+1])']);\n      break;\n    case 'Selection Sort':\n      topSection = aboutAlgorithm('Selection Sort', ['N\\u00B2', '1'], 'The smallest element in the unsorted array is moved at the end of a sorted array.');\n      bottomSection = pseudoCode(['for i from 1 to N', '\\tmin = i', '\\tfor j from i to N', '\\t\\tif array[j] < array[min]', '\\t\\t\\tmin = j', '\\tswap(array[i], array[min])']);\n      break;\n    case 'Insertion Sort':\n      topSection = aboutAlgorithm('Insertion Sort', ['NlogN', '1'], 'Each element is positioned in the array such that every element on it\\'s left are smaller.');\n      bottomSection = pseudoCode(['for i from 1 to N', '\\tkey = array[i]', '\\tj = i - 1', '\\twhile j >= 0 and array[j] > key', '\\t\\tarray[j+1] = array[j]', '\\t\\tj = j - 1', '\\tarray[j+1] = key']);\n      break;\n    case 'Merge Sort':\n      topSection = aboutAlgorithm('Merge Sort', ['NlogN', 'N'], 'The array is broken into two smaller arrays of roughly the same size, and then use merge sort recursively on the subarrays.');\n      bottomSection = pseudoCode(['func mergesort(array)', '\\tif (n == 1) return array', '\\tl1 = mergesort(array[0] ... array[n/2])', '\\tl2 = mergesort(array[n/2+1] ... array[n])', '\\treturn merge(l1, l2)', '', 'func merge(l1, l2)', '\\tres = []', '\\twhile (l1 and l2 have elements)', '\\t\\tif (l1[0] < l2[0])', '\\t\\t\\tadd l1[0] to the end of res', '\\t\\t\\tremove l1[0] from l1', '\\t\\telse', '\\t\\t\\tadd l2[0] to the end of res', '\\t\\t\\tremove l2[0] from l2', '\\twhile (l1 has elements)', '\\t\\tadd l1[0] to the end of res', '\\t\\tremove l1[0] from l1', '\\twhile (l2 has elements)', '\\t\\tadd l2[0] to the end of res', '\\t\\tremove l2[0] from l2', '\\treturn res']);\n      break;\n    case 'Quick Sort':\n      topSection = aboutAlgorithm('Quick Sort', ['NlogN', 'N'], 'The array is partitioned into two parts, then sorting the parts independently. Partioning is the key to this algorithm. Each element is compared against the pivot: a element picked at random. the elements are swapped such that the elements on the left of the pivot are smaller and the element on the right are larger.');\n      bottomSection = pseudoCode(['fun quicksort(array, left, right)', '\\tif (left < right)', '\\t\\tpivot_index = partition(array, left, right)', '\\t\\tquicksort(array,left, pivot_index-1)', '\\t\\tquicksort(arry, pivot_index, right)', '', 'fun partition(array, left, right)', '\\tpivot = array[right]', '\\tleftwall = left - 1', '\\tfor i = left to right', '\\t\\tif (array[i] < pivot) then', '\\t\\t\\tleftwall = leftwall + 1', '\\t\\t\\tswap(array[i], array[leftwall])', '\\t\\tswap(pivot, array[leftwall])', '\\treturn leftwall']);\n      break;\n    case 'Heap Sort':\n      topSection = aboutAlgorithm('Heap Sort', ['NlogN', 'N'], 'The array is first turned into a max heap, The algorithm then repeatedly swaps the first value of the array with the last value, decreasing the range of values considered in the heap operation by one, and sifting the new first value into its position in the heap. This repeats until the range of considered values is one value in length.');\n      bottomSection = pseudoCode(['heapsort(array)', '\\tbuildHeap(array)', 'f\\tor i = n to 1', '\\t\\tswap(A[1], A[i])', '\\t\\tHeapify(A, 1)', '', 'buildHeap(A as array)', '\\tn = array.length', '\\tfor i = floor(n/2) to 1', '\\t\\tHeapify(A,i,n)', '', 'heapify(array, i, n)', '\\tleft = 2i', '\\tright = 2i+1', '\\tmax = i', '\\tif (left < n) and (array[i] < array[left])', '\\t\\tmax = left', '\\telse', '\\t\\tmax = i', '\\tif (right<n) and (array[max] < A[right])', '\\t\\tmax = right', '\\tif (max != i)', '\\t\\tswap(array[i], array[max])', '\\t\\theapify(array, max)']);\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div style={styles.outerContainer}>\n      <div style={styles.innerContainer}>\n        {topSection}\n        {bottomSection}\n      </div>\n    </div>\n  );\n};\n\nexport default SideContent;\n","import React, {useState, useEffect, useRef} from 'react';\nimport ReactDOM from 'react-dom';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Bar from './Bar';\nimport Header from './Header';\nimport ColorScheme from './ColorScheme';\nimport SideContent from './SideContent';\nimport {getInitialAngle, getInitialPosition} from './DataHelper';\n\ntype Styles = {\n  appContainer: object,\n  contentContainer: object,\n  outerContainer: object,\n  innerContainer: object,\n  linkShoutout: object,\n};\n\nexport const spacing: number = 15;\n\nfunction App() {\n  const [data, setData] = useState<Bar[]>([]);\n  const [numberBars, setNumberBars] = useState<number>(40);\n  const [sleepTime, setSleepTime] = useState<number>(100);\n  const [selectedAlgorithm, setSelectedAlgorithm] = React.useState<number>(0);\n  const time = useRef(sleepTime);\n  time.current = sleepTime;\n  const styles: Styles = {\n    appContainer: {\n      position: 'relative',\n      display: 'flex',\n      flexFlow: 'column',\n      height: '100%',\n      width: '-webkit-fill-available',\n      borderRadius: '5px',\n      boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\n    },\n    outerContainer: {\n      display: 'flex',\n      flexFlow: 'row',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      position: 'relative',\n      height: '100%',\n      width: '100%',\n    },\n    contentContainer: {\n      position: 'relative',\n      display: 'flex',\n      flex: 'auto',\n      height: '100%',\n      overflow: 'hidden',\n    },\n    innerContainer: {\n      position: 'absolute',\n      display: 'block',\n      height: '400px',\n      width: numberBars * spacing,\n      left: '50%',\n      top: '50%',\n      transform: 'translate(-50%, -50%)',\n    },\n    linkShoutout: {\n      position: 'absolute',\n      right: '10px',\n      bottom: '10px',\n    },\n  };\n\n  // equivalent to componentOnMount\n  useEffect(() => {\n    generateNewData(numberBars);\n  }, []);\n  useEffect(() => {\n    time.current = sleepTime;\n  }, [sleepTime]);\n\n\n  function getDataComponent(data: Bar[]): React.Component[] {\n    const bars: React.Component[] = [];\n    for (const bar of data) {\n      bars.push(bar.getComponent(sleepTime));\n    }\n    return bars;\n  }\n\n  function generateNewData(newNumberBars: number) {\n    const newData: Bar[] = [];\n    for (let index: number = 0; index < newNumberBars; index ++) {\n      newData.push(new Bar(getInitialAngle(newNumberBars, index), getInitialPosition(index)));\n    }\n    setNumberBars(newNumberBars);\n    setData([...newData]);\n  }\n\n  async function changeData(data: Bar[], customeTime?: number) {\n    setData([...data]);\n    await new Promise((resolve) => setTimeout(resolve, customeTime? customeTime: time.current));\n  }\n\n  return (\n    <div style={styles.appContainer}>\n      <Header\n        data={data}\n        setData={changeData}\n        numberBars={numberBars}\n        generateNewData={generateNewData}\n        selectedAlgorithm={selectedAlgorithm}\n        setSelectedAlgorithm={setSelectedAlgorithm}\n        sleepTime={sleepTime}\n        setSleepTime={setSleepTime}\n      />\n      <div style={styles.outerContainer}>\n        <SideContent selectedAlgorithm={selectedAlgorithm}/>\n        <div style={styles.contentContainer}>\n          <div style={styles.innerContainer}>\n            {getDataComponent(data)}\n          </div>\n          <ColorScheme selectedAlgorithm={selectedAlgorithm}/>\n        </div>\n        <Typography style={styles.linkShoutout} variant='subtitle2'>\n          <Link href='https://bost.ocks.org/mike/algorithms/'>\n            Inspired by Mike Bostock\n          </Link>\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}